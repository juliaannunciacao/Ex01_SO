package controller;

import java.io.BufferedReader;
import java.io.InputStreamReader;

public class RedesController {
    private String os() {
        String os = System.getProperty("os.name").toLowerCase();
        return os;
    }

    public void ip() {
        try {
            String sistemaOperacional = os();
            Process processo;
            if (sistemaOperacional.contains("win")) {
                processo = Runtime.getRuntime().exec("ipconfig");
            } else if (sistemaOperacional.contains("nix") || sistemaOperacional.contains("nux")) {
                processo = Runtime.getRuntime().exec("ifconfig");
            } else {
                System.out.println("Sistema operacional não suportado.");
                return;
            }

            BufferedReader reader = new BufferedReader(new InputStreamReader(processo.getInputStream()));
            String linha;
            while ((linha = reader.readLine()) != null) {
                if (linha.contains("IPv4") || linha.contains("inet")) {
                    String[] partes = linha.split(" ");
                    for (String parte : partes) {
                        if (parte.contains(".")) {  // Filtra endereços IPv4
                            System.out.println(parte);
                        }
                    }
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void ping() {
        try {
            String sistemaOperacional = os();
            Process processo;
            
            if (sistemaOperacional.contains("win")) {
                processo = Runtime.getRuntime().exec("ping -n 10 www.google.com.br");
            } else if (sistemaOperacional.contains("nix") || sistemaOperacional.contains("nux")) {
                processo = Runtime.getRuntime().exec("ping -4 -c 10 www.google.com.br");
            } else {
                System.out.println("Sistema operacional não suportado.");
                return;
            }

            BufferedReader reader = new BufferedReader(new InputStreamReader(processo.getInputStream()));
            String linha;
            boolean tempoMedio = false;
            while ((linha = reader.readLine()) != null) {
                if (linha.contains("Average") || linha.contains("tempo médio")) {
                    tempoMedio = true;
                    System.out.println("Tempo médio do ping: " + linha);
                }
            }

            if (!tempoMedio) {
                System.out.println("Não foi possível calcular o tempo médio.");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
